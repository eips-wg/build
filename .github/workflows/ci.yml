name: Continuous Integration (Common)

on:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.repository }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  save-pr:
    name: Save Pull Request Metadata
    runs-on: ubuntu-latest

    steps:
      - name: Build Artifact
        env:
          PR_NUMBER: ${{ github.event.number }}
          PR_SHA: ${{ github.event.pull_request.head.sha }}
          MERGE_SHA: ${{ github.sha }}
        run: |
          mkdir -p ./pr
          echo $PR_NUMBER > ./pr/pr_number
          echo $PR_SHA > ./pr/pr_sha
          echo $MERGE_SHA > ./pr/merge_sha

      - name: Upload Artifact
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
        with:
          name: pr_number
          path: pr/

  codespell:
    name: CodeSpell
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (Content)
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Checkout (Build)
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          repository: eips-wg/build
          path: build

      - name: Get Changed Files
        id: changed-files
        uses: ./build/.github/actions/changed-files
        with:
          patterns: |
            ^content/.+\.md$

      - name: Filter File Names
        # Have to remove any weird filenames.
        # See https://github.com/codespell-project/actions-codespell/issues/79.
        id: filter-files
        shell: python
        env:
          FILES: ${{ steps.changed-files.outputs.changed-files }}
        run: |
          import shlex, os
          paths = os.environ["FILES"].split("\n")
          text = " ".join(x for x in paths if shlex.quote(x) == x)
          if "\n" in text:
            raise ValueError("newline in paths")
          with open(os.environ["GITHUB_OUTPUT"], "w") as f:
            if text == "EOF":
              f.write("escaped=EOF\n")
            else:
              f.write("escaped<<EOF\n")
              f.write(text)
              f.write("\nEOF\n")

      - name: Run CodeSpell
        if: steps.changed-files.outputs.any-changed == 'true'
        uses: codespell-project/actions-codespell@406322ec52dd7b488e48c1c4b82e2a8b3a1bf630
        with:
          check_filenames: true
          ignore_words_file: ./build/config/codespell-whitelist
          path: ${{ steps.filter-files.outputs.escaped }}

  render:
    name: Render
    runs-on: ubuntu-latest

    steps:
      - name: Fetch Pages Configuration
        id: get_pages
        uses: octokit/request-action@89697eb6635e52c6e1e5559f15b5c91ba5100cb0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          route: GET /repos/{owner}/{repo}/pages
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}

      - name: Checkout (Build)
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          repository: eips-wg/build
          path: build

      - name: Checkout (Content)
        uses: ./build/.github/actions/checkout-eips
        with:
          path: work

      - name: Render
        uses: ./build/.github/actions/render-eips
        with:
          base-url: "${{ fromJSON(steps.get_pages.outputs.data).html_url }}"
          root: work
          config: ./build/config/zola.toml

  eipw-validator:
    name: EIP Validator (eipw)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (Build)
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          repository: eips-wg/build
          path: build

      - name: Checkout (Content)
        uses: ./build/.github/actions/checkout-eips
        with:
          path: work

      - name: Prohibit Ignored Files
        working-directory: work
        run: |
          FOUND="$(git ls-files -i -c --exclude-standard | head -c1 | wc -c)"
          MESSAGE='The file `%` is marked as git ignored. Please remove it.'
          if [[ "$FOUND" -ne 0 ]]; then
            git ls-files -z -i -c --exclude-standard \
              | xargs -0 -r -I '%' echo "::error file=%::$MESSAGE";
            exit 1;
          fi

      - uses: ethereum/eipw-action@070801632e9f9196e23e25df10ab88e72f6e799b
        name: Validate
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          unchecked: 1, 5069, 5757
          options-file: build/config/eipw.toml
          working-directory: work/
          include: "content/+([[:digit:]]){/index,}.md"

  markdownlint:
    name: Markdown Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (Content)
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Checkout (Build)
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          repository: eips-wg/build
          path: build

      - name: Get Changed Files
        id: changed-files
        uses: ./build/.github/actions/changed-files
        with:
          patterns: |
            ^content/.+\.md$

      - name: Markdown Lint
        if: steps.changed-files.outputs.any-changed == 'true'
        uses: DavidAnson/markdownlint-cli2-action@db43aef879112c3119a410d69f66701e0d530809
        with:
          config: ./build/config/config.markdownlint.yaml
          globs: ${{ steps.changed-files.outputs.changed-files }}
